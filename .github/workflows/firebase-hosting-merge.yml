# .github/workflows/firebase-hosting-merge.yml
name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # 1) Bajo código
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Node.js LTS compatible
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # 3) Instala dependencias
      - name: Install dependencies
        run: npm ci

      # 4) Genera tu environment.ts dinámicamente
      - name: Generate environment file
        run: |
          cat <<EOF > src/environments/environment.ts
          export const environment = {
            production: true,
            firebaseConfig: {
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              appId: '${{ secrets.FIREBASE_APP_ID }}',
              measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'
            }
          };
          EOF

      # 5) Build de Angular
      - name: Build Angular (prod)
        run: npm run build -- --configuration=production

      # 6) Autentica la CLI de Firebase con tu service account
      - name: Authenticate Firebase CLI
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_MARKETPLACE_A9AB1 }}" > sa.json
          npm install -g firebase-tools@latest
          export GOOGLE_APPLICATION_CREDENTIALS="$PWD/sa.json"

      # 7) Deploy a Hosting (producción)
      - name: Deploy to Firebase Hosting
        run: |
          npx firebase-tools deploy \
            --only hosting \
            --project ${{ secrets.FIREBASE_PROJECT_ID }}
